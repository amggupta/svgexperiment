<?xml version="1.0" encoding="utf-8"?>
<svg viewBox="-50 -50 400 400" onload="makeDraggable(evt)" xmlns="http://www.w3.org/2000/svg">
  <rect width="300" height="300" style="fill: rgb(216, 216, 216); stroke: rgb(199, 30, 81);"/>
  <polyline style="fill: rgb(216, 216, 216); stroke: rgb(199, 30, 81);" points="0 20 20 20 20 0"/>
  <polyline style="fill: rgb(216, 216, 216); stroke: rgb(199, 30, 81);" points="280 0 280 20 300 20"/>
  <polyline style="fill: rgb(216, 216, 216); stroke: rgb(199, 30, 81);" points="0 280 20 280 20 300"/>
  <polyline style="fill: rgb(216, 216, 216); stroke: rgb(199, 30, 81);" points="280 300 280 280 300 280"/>

  <line style="stroke: rgb(0, 0, 0);" x1="0" y1="60" x2="60" y2="300" id="L1"/>
  <line style="stroke: rgb(0, 0, 0);" x1="60" y1="300" x2="300" y2="240" id="L4"/>
  <line style="stroke: rgb(0, 0, 0);" x1="300" y1="240" x2="240" y2="0" id="L3"/>
  <line style="stroke: rgb(0, 0, 0);" x1="240" y1="0" x2="0" y2="60" id="L2"/>
  <circle class="draggable" style="fill: rgb(17, 116, 23);" cx="60" cy="300" r="8" id="P1"/>
  <circle class="draggable" style="fill: rgb(17, 116, 23);" cx="0" cy="60" r="8" id="P2"/>
  <circle class="draggable" style="fill: rgb(17, 116, 23);" cx="240" cy="0" r="8" id="P3"/>
  <circle class="draggable" style="fill: rgb(17, 116, 23);" cx="300" cy="240" r="8" id="P4"/>

<script>
var selectedElement = false;

function makeDraggable(evt) {
  var svg = evt.target;
  svg.addEventListener('mousedown', startDrag);
  svg.addEventListener('mousemove', drag);
  svg.addEventListener('mouseup', endDrag);
  svg.addEventListener('mouseleave', endDrag);
  function startDrag(evt) {
    if (evt.target.classList.contains('draggable')) {
      evt.preventDefault();
      selectedElement = evt.target;
  }
  }
  function drag(evt) {
    if (selectedElement) {
      var coord = getMousePosition(evt);

      if ( (selectedElement.id == "P1") || (selectedElement.id == "P3"))  {
        var curr_x = selectedElement.getAttribute("cx");
        
        var delta = coord.x - curr_x;
        if ( selectedElement.id == "P3" ) delta = -delta;
          updatePoint( delta );
      } else {
        //selectedElement.setAttribute("cy", coord.y);
      }
    }
  }
  function endDrag(evt) {
    selectedElement = false;
  }

  function getMousePosition(evt) {
    var CTM = svg.getScreenCTM();
    return {
      x: (evt.clientX - CTM.e) / CTM.a,
      y: (evt.clientY - CTM.f) / CTM.d
    };
  }

  function updatePoint( delta ) {
    var P1, P2, P3, P4;
    var L1, L2, L3, L4;

    P1 = svg.getElementById("P1");
    P2 = svg.getElementById("P2");
    P3 = svg.getElementById("P3");
    P4 = svg.getElementById("P4");

    L1 = svg.getElementById("L1");
    L2 = svg.getElementById("L2");
    L3 = svg.getElementById("L3");
    L4 = svg.getElementById("L4");

    var x, y;

    x = P1.getAttribute("cx"); x = +x + +delta; P1.setAttribute("cx", x);
    x = P3.getAttribute("cx"); x = x - delta; P3.setAttribute("cx", x);

    y = P2.getAttribute("cy"); y = +y + +delta; P2.setAttribute("cy", y);
    y = P4.getAttribute("cy"); y -= delta; P4.setAttribute("cy", y);

    L1.setAttribute("x1", P1.getAttribute("cx"));
    L1.setAttribute("y1", P1.getAttribute("cy"));
    L1.setAttribute("x2", P2.getAttribute("cx"));
    L1.setAttribute("y2", P2.getAttribute("cy"));

    L2.setAttribute("x1", P2.getAttribute("cx"));
    L2.setAttribute("y1", P2.getAttribute("cy"));
    L2.setAttribute("x2", P3.getAttribute("cx"));
    L2.setAttribute("y2", P3.getAttribute("cy"));

    L3.setAttribute("x1", P3.getAttribute("cx"));
    L3.setAttribute("y1", P3.getAttribute("cy"));
    L3.setAttribute("x2", P4.getAttribute("cx"));
    L3.setAttribute("y2", P4.getAttribute("cy"));

    L4.setAttribute("x1", P4.getAttribute("cx"));
    L4.setAttribute("y1", P4.getAttribute("cy"));
    L4.setAttribute("x2", P1.getAttribute("cx"));
    L4.setAttribute("y2", P1.getAttribute("cy"));
  }

}
</script>
</svg>
